name: todo-app

services:

  postgres:
    image: postgres
    pull_policy: if_not_present
    restart: always
    ports:
      - 5432:5432
    # set shared memory limit when using docker compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: todo
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "admin", "-d", "todo"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-tier

  mariadb:
    build:
      context: ./mariadb
      dockerfile: Dockerfile
    pull_policy: if_not_present
    restart: always
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: todo
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    volumes:
      - mariadb_data:/var/lib/mysql
      - mariadb_init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["--character-set-server=utf8mb4", "--collation-server=utf8mb4_unicode_520_ci", "--skip-character-set-client-handshake"]
    networks:
      - app-tier

  redis:
    build:
      context: ./redis
      dockerfile: Dockerfile
    restart: always
    ports:
      - 6379:6379
    command: sh -cx "redis-server --daemonize yes && redis-cli configset notify-keyspace-events Ex && sleep infinity"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge

volumes:
  mariadb_data:
    driver: local
  mariadb_init:
    driver: local
  redis_data:
    driver: local
